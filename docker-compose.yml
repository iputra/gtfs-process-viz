services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8081:8081"

  gtfs-consumer:
    build:
      context: ./backend/gtfs-consumer
    depends_on:
      - kafka
    volumes:
      - ./backend/gtfs-consumer:/app
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_TOPIC=gtfs-vehicle-positions
      - FETCH_INTERVAL_SECONDS=30
      # You'll need to set GTFS_REALTIME_URL in a .env file or here

  spark-processor:
    build:
      context: ./backend/spark-processor
    depends_on:
      - kafka
      - spark-master
    volumes:
      - ./backend/spark-processor:/app
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - INPUT_TOPIC=gtfs-vehicle-positions
      - OUTPUT_TOPIC=geofence-events
      - GEOFENCE_FILE=/app/geofences.json

  backend:
    build:
      context: ./backend/geofencing-service
    ports:
      - "8000:8000"
    depends_on:
      - kafka
    volumes:
      - ./backend/geofencing-service:/app
      - ./backend/spark-processor/geofences.json:/app/geofences.json
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - VEHICLE_POSITIONS_TOPIC=gtfs-vehicle-positions
      - GEOFENCE_EVENTS_TOPIC=geofence-events
      - GEOFENCE_FILE=/app/geofences.json

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
